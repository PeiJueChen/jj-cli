"use strict";const e=require("path"),s=require("./fs"),i=require("./logs"),n=require("./common"),o="jj.config.json",t="C:\\Users\\aigens-pc\\Desktop\\Android-sign\\jj.config.json",r="/Users/chenpeijue/Desktop/Android-sign/jj.config.json",{getDeviceConfig:a}=require("./http");exports.parseConfig=async n=>{let a=e.resolve(n,o);s.existsSync(a)||(a="win32"===process.platform?t:"darwin"===process.platform?r:"",a&&s.existsSync(a)||i.logFatal("Cannot find sign config file"),n=e.join(a,"../"));var c=await s.readFileContentAsync(a);return c||i.logFatal(`${o} is empty.`),"string"==typeof c&&(c=JSON.parse(c)),{config:c,configPathDiretory:n}},exports.parseConfigPromise=n=>new Promise((async(c,f)=>{let p=e.resolve(n,o);if(!s.existsSync(p)){if(p="win32"===process.platform?t:"darwin"===process.platform?r:"",!p||!s.existsSync(p)){const e=await a();return void c({config:g=e&&e.data&&e.data.data,configPathDiretory:n})}n=e.join(p,"../")}var g=await s.readFileContentAsync(p);g||i.logFatal(`${o} is empty.`),"string"==typeof g&&(g=JSON.parse(g)),c({config:g,configPathDiretory:n})})),exports.askProjects=(e,s)=>new Promise((async(i,o)=>{const t=e.projects||[];if(s){const e=t.find((e=>~e.name.indexOf(s)));if(e)return void i(e)}const r=t.map((e=>e&&e.name||""));r.some((e=>!e))&&o("Please write all `name` field as project name");const a=await n.askSelectList(r,"Project");i(t.find((e=>e.name===a)))}));