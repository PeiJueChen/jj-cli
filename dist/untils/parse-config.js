"use strict";const e=require("path"),s=require("./fs"),n=require("./logs"),o=require("./common"),i="jj.config.json",r="C:\\Users\\aigens-pc\\Desktop\\Android-sign\\jj.config.json",t="/Users/chenpeijue/Desktop/Android-sign/jj.config.json";exports.parseConfig=async o=>{let a=e.resolve(o,i);s.existsSync(a)||(a="win32"===process.platform?r:"darwin"===process.platform?t:"",a&&s.existsSync(a)||n.logFatal("Cannot find sign config file"),o=e.join(a,"../"));var c=await s.readFileContentAsync(a);return c||n.logFatal(`${i} is empty.`),"string"==typeof c&&(c=JSON.parse(c)),{config:c,configPathDiretory:o}},exports.parseConfigPromise=o=>new Promise((async(a,c)=>{let f=e.resolve(o,i);s.existsSync(f)||(f="win32"===process.platform?r:"darwin"===process.platform?t:"",f&&s.existsSync(f)||c("Cannot find sign config file"),o=e.join(f,"../"));var p=await s.readFileContentAsync(f);p||n.logFatal(`${i} is empty.`),"string"==typeof p&&(p=JSON.parse(p)),a({config:p,configPathDiretory:o})})),exports.askProjects=(e,s)=>new Promise((async(n,i)=>{const r=e.projects||[];if(s){const e=r.find((e=>~e.name.indexOf(s)));if(e)return void n(e)}const t=r.map((e=>e&&e.name||""));t.some((e=>!e))&&i("Please write all `project` field as project name");const a=await o.askSelectList(t,"Project");n(r.find((e=>e.name===a)))}));