"use strict";const e=require("timers");async function t(e){const t=await Promise.resolve().then((()=>require("which")));return new Promise((r=>{t(e,(e=>{r(!e)}))}))}function r(t){return new Promise((r=>e.setTimeout(r,t)))}exports.isInstalled=t,exports.wait=r;const o=["s","ms","μp"];function s(e){let t=e[0]+e[1]/1e9,r=0;for(;r<o.length-1&&!(t>=1);r++,t*=1e3);return t.toFixed(2)+o[r]}async function n(e,t){const r=require("ora")(e).start();try{const o=process.hrtime();let n;const i=await t((e=>n=e)),a=process.hrtime(o),c=require("chalk");return n?r.info(`${e} ${c.dim("– "+n)}`):r.succeed(`${e} ${c.dim("in "+s(a))}`),i}catch(t){throw r.fail(`${e}: ${t.message?t.message:""}`),r.stop(),t}}async function i(e,t){const r=require("ora"),o=require("chalk"),n=r(e).start();try{const r=process.hrtime();let i;const a=e=>{n.stop(),console.log(e),n.start()},c=await t((e=>{i=e,a(e)})),u=process.hrtime(r);return i?n.info(`${e} ${o.dim("– "+i)}`):n.succeed(`${e} ${o.dim("in "+s(u))}`),c}catch(t){throw n.fail(`${e}: ${t.message?t.message:""}`),n.stop(),t}}async function a(e){if(!e){const e=await Promise.resolve().then((()=>require("inquirer")));return(await e.prompt([{type:"input",name:"name",default:"App",message:"App name"}])).name}return e}async function c(e){const t=await Promise.resolve().then((()=>require("inquirer"))),r=await t.prompt([{type:"input",name:"url",default:"",message:e}]);return r&&r.url}async function u(){const e=await Promise.resolve().then((()=>require("inquirer")));return(await e.prompt({type:"list",name:"mode",message:"Please choose a platform to open:",choices:["ios","android"]})).mode.toLowerCase().trim()}async function m(e,t=!1){if(!e)return;const r=await Promise.resolve().then((()=>require("open")));await r(e,{wait:t})}async function p(e,t){const r=await Promise.resolve().then((()=>require("inquirer")));return(await r.prompt({type:"list",name:"mode",message:`Please choose a(an) ${e} to run:`,choices:t})).mode.toLowerCase().trim()}async function l(e,t){if(!e||0===e.length)throw new Error("source is empty");const r=await Promise.resolve().then((()=>require("inquirer"))),o=await Promise.resolve().then((()=>require("inquirer-autocomplete-prompt")));r.registerPrompt("autocomplete",o);const s=await r.prompt([{type:"autocomplete",name:t,suggestOnly:!1,message:`Please Enter / Choose Your ${t}: `,searchText:"Searching...",emptyText:"Nothing found!",source:async(t,r)=>(r=r||"",new Promise((function(t){t(e.filter((e=>{let t=e&&e.toLowerCase()||"",o=r&&r.toLowerCase()||"";return~t.indexOf(o)})))})))}]),n=s&&s[t]||"";return~e.indexOf(n)?n:null}exports.formatHrTime=s,exports.runTask=n,exports.runTaskAndLog=i,exports.getName=a,exports.askGenAuthUrl=c,exports.askPlatform=u,exports.openUrl=m,exports.askChoose=p,exports.askSelectList=l;