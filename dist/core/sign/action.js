"use strict";const n=require("../../untils/logs"),a=require("../../untils/fs"),e=require("../../untils/parse-config"),t=require("../../untils/format"),s=require("../../untils/common"),o=require(".././upload/common"),{signPlatforms:i}=require("../../constants/platforms"),{runCommand:r,commandExec:l}=require("../../untils/terminal"),c=require("path"),p=require("./../upload/common"),u="cc08d0408403c04968bcfbf738a7356bf6f4c8be";var g,f,d,y,m;const k=async({platform:a,currentWorkingDir:e,cliBinDir:t,projectname:s,folderpath:o,appcenter:r})=>{g=o||e,f=e,d=s,y=r;const l=a&&a.toLowerCase().trim();var c=i[l];if(!c)return void n.logFatal(`Only support ${Object.keys(i)} now.`);let p=new Map([["ios",async()=>{}],["android",async()=>{await C()}]]);m=c;const u=p.get(c);u&&u()},j=e=>{e||n.logFatal("Missing file");const t=c.resolve(g,...e.split("/"));return a.existsSync(t)||n.logFatal(`Cannot find file: ${e}`),t},w=async e=>{const t=e.unsignedApk;try{const n=await o.findPackageApp(m,f,null);var s=n&&n.fullPath,i=s&&a.existsSync(s)}catch(n){}if(i||(i=(s=c.resolve(f,"app-release-unsigned.apk"))&&a.existsSync(s)),i||(i=(s=c.isAbsolute(t)&&c.resolve(t)||null)&&a.existsSync(s)),!i){s=c.resolve(g,...t.split("/"));i=a.existsSync(s)}i||n.logFatal("Cannot find app-release-unsigned.apk"),e.unsignedApk=s},$=async()=>{const{config:n,configPathDiretory:a}=await e.parseConfig(g);return g=a,await w(n),n},h=async(a,t)=>{try{return await e.askProjects(a,t)}catch(a){n.logFatal("Please write all `project` field as project name")}},F=async(n,e)=>{const s=e&&e.name,o=c.join(n,"../","signedApks");await a.mkdirAsyncRecursive(o);const i=`${s}-signed-${t.formatDate((new Date).getTime(),"yyyy-MM-dd-[hh-mm-ss]")}.apk`;return c.resolve(o,i)},v=n=>{a.existsSync(n)&&a.unlinkSync(n)},b=(n,a)=>{const e=c.join(n,"../",`${a}-unsigned-temp.apk`);return v(e),e};async function C(){await s.isInstalled("jarsigner")||n.logFatal("Cannot find `jarsigner`"),await s.isInstalled("zipalign")||n.logFatal("Cannot find `zipalign`");const a=await $(),e=a.unsignedApk,t=await h(a,d);n.logFriendly(`Your Project is : ${t.name}`);const o=t.keyStoreFile,i=j(o),r=t.alias||a.defaultAlias;r||n.logFatal("Cannot find alias");const p=t.storepass||t.keypass,u=t.keypass||t.storepass;p&&u||n.logFatal("Cannot find storepass / keypass");const g=await F(i,t),f=b(g,t.name);try{n.blue("................... Zipalign Start ..................."),await l(`zipalign -v -p 4 ${e} ${f}`),n.blue("................... Zipalign End ..................."),n.red("\n...........................................................................................\n"),n.blue("................... Sign Start ..................."),await l(`apksigner sign --ks ${i} --ks-key-alias ${r} --ks-pass pass:${u} --key-pass pass:${p} --verbose --out ${g} ${f}`),v(f),n.blue("................... Sign End ...................\n\n");const o=`\n        Your Project name: ${t.name}\n\n        Your APK: ${e}\n\n        Output: ${g}\n\n        `;n.green(o),await s.openUrl(c.join(g,"../")),P(g,t.appcenter,m,a.defaultAppcenterToken)}catch(a){n.logError(a)}}const P=async(e,t,o=m,i="",r=y)=>{a.existsSync(e)||n.logFatal(`Cannot find your: ${e}`);const l=(t=t||{})[o]||{},c=Object.keys(l);if(0===c.length)return void n.logFriendly("Cannot find your appcenter config at jj.config.json");const g=r&&l[r];var f;if(g){g.userName&&g.appName&&g.group||n.logFatal("Please check your jj.config.json, Cannot find userName/appName/group"),f={...g,token:g.token||l.token||t.token||i||u,appPath:e,platform:o}}else{const a=c.filter((n=>{const a=l[n];return"object"==typeof a&&Object.keys(a).length>0&&a.userName&&a.appName&&a.group}));0===a.length&&n.logFatal("Please check your jj.config.json, Cannot find userName/appName/group"),n.logFriendly("Upload app to appcenter");var d=await s.askSelectList(a,"Group");const r=l[d];r||n.logFatal("Cannot find your Group info"),f={...r,token:r.token||l.token||t.token||i||u,appPath:e,platform:o}}p.uploadWithInfo(f)};module.exports={signPlatform:k,uploadToAppcenter:P};