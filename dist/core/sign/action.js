"use strict";const n=require("../../untils/logs"),e=require("../../untils/fs"),a=require("../../untils/parse-config"),t=require("../../untils/format"),o=require("../../untils/common"),s=require(".././upload/common"),{signPlatforms:r}=require("../../constants/platforms"),{runCommand:i,commandExec:l}=require("../../untils/terminal"),c=require("path"),p=require("./../upload/common"),u="cc08d0408403c04968bcfbf738a7356bf6f4c8be";var g,d,f,y,m;const k=async({platform:e,currentWorkingDir:a,cliBinDir:t,projectname:o,folderpath:s,appcenter:i})=>{g=s||a,d=a,f=o,y=i;const l=e&&e.toLowerCase().trim();var c=r[l];if(!c)return void n.logFatal(`Only support ${Object.keys(r)} now.`);let p=new Map([["ios",async()=>{}],["android",async()=>{await C()}]]);m=c;const u=p.get(c);u&&u()},j=a=>{a||n.logFatal("Missing file");const t=c.resolve(g,...a.split("/"));return e.existsSync(t)||n.logFatal(`Cannot find file: ${a}`),t},w=async a=>{const t=a.unsignedApk;try{const n=await s.findPackageApp(m,d,null);var o=n&&n.fullPath,r=o&&e.existsSync(o)}catch(n){}if(r||(r=(o=c.resolve(d,"app-release-unsigned.apk"))&&e.existsSync(o)),r||(r=(o=c.isAbsolute(t)&&c.resolve(t)||null)&&e.existsSync(o)),!r){o=c.resolve(g,...t.split("/"));r=e.existsSync(o)}r||n.logFatal("Cannot find app-release-unsigned.apk"),a.unsignedApk=o},$=async()=>{const{config:n,configPathDiretory:e}=await a.parseConfig(g);return g=e,await w(n),n},h=async(e,t)=>{try{return await a.askProjects(e,t)}catch(e){n.logFatal("Please write all `project` field as project name")}},F=async(n,a)=>{const o=a&&a.name,s=c.join(n,"../","signedApks");await e.mkdirAsyncRecursive(s);const r=`${o}-signed-${t.formatDate((new Date).getTime(),"yyyy-MM-dd-[hh-mm-ss]")}.apk`;return c.resolve(s,r)},v=n=>{e.existsSync(n)&&e.unlinkSync(n)},b=(n,e)=>{const a=c.join(n,"../",`${e}-unsigned-temp.apk`);return v(a),a};async function C(){await o.isInstalled("jarsigner")||n.logFatal("Cannot find `jarsigner`"),await o.isInstalled("zipalign")||n.logFatal("Cannot find `zipalign`");const e=await $(),a=e.unsignedApk,t=await h(e,f);n.logFriendly(`Your Project is : ${t.name}`);const s=t.keyStoreFile,r=j(s),i=t.alias||e.defaultAlias;i||n.logFatal("Cannot find alias");const p=t.storepass||t.keypass,u=t.keypass||t.storepass;p&&u||n.logFatal("Cannot find storepass / keypass");const g=await F(r,t),d=b(g,t.name);try{n.blue("................... Zipalign Start ..................."),await l(`zipalign -v -p 4 ${a} ${d}`),n.blue("................... Zipalign End ..................."),n.red("\n...........................................................................................\n"),n.blue("................... Sign Start ..................."),await l(`jarsigner -verbose -keystore ${r} -storepass ${p} -keypass ${u} -signedjar ${g} ${d} ${i}`),v(d),n.blue("................... Sign End ...................\n\n");const s=`\n        Your Project name: ${t.name}\n\n        Your APK: ${a}\n\n        Output: ${g}\n\n        `;n.green(s),await o.openUrl(c.join(g,"../")),P(g,t.appcenter,m,e.defaultAppcenterToken)}catch(e){n.logError(e)}}const P=async(a,t,s=m,r="",i=y)=>{e.existsSync(a)||n.logFatal(`Cannot find your: ${a}`);const l=(t=t||{})[s]||{},c=Object.keys(l);if(0===c.length)return void n.logFriendly("Cannot find your appcenter config at jj.config.json");const g=i&&l[i];var d;if(g){g.userName&&g.appName&&g.group||n.logFatal("Please check your jj.config.json, Cannot find userName/appName/group"),d={...g,token:g.token||l.token||t.token||r||u,appPath:a,platform:s}}else{const e=c.filter((n=>{const e=l[n];return"object"==typeof e&&Object.keys(e).length>0&&e.userName&&e.appName&&e.group}));0===e.length&&n.logFatal("Please check your jj.config.json, Cannot find userName/appName/group"),n.logFriendly("Upload app to appcenter");var f=await o.askSelectList(e,"Group");const i=l[f];i||n.logFatal("Cannot find your Group info"),d={...i,token:i.token||l.token||t.token||r||u,appPath:a,platform:s}}p.uploadWithInfo(d)};module.exports={signPlatform:k,uploadToAppcenter:P};