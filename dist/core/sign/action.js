"use strict";const e=require("../../untils/logs"),n=require("../../untils/fs"),a=require("../../untils/parse-config"),t=require("../../untils/format"),o=require("../../untils/common"),s=require(".././upload/common"),{signPlatforms:i}=require("../../constants/platforms"),{runCommand:r,commandExec:l}=require("../../untils/terminal"),c=require("path"),p=require("./../upload/common"),u="cc08d0408403c04968bcfbf738a7356bf6f4c8be";var g,f,d,y,m;const k=async({platform:n,currentWorkingDir:a,cliBinDir:t,projectname:o,folderpath:s,appcenter:r})=>{g=s||a,f=a,d=o,y=r;const l=n&&n.toLowerCase().trim();var c=i[l];if(!c)return void e.logFatal(`Only support ${Object.keys(i)} now.`);let p=new Map([["ios",async()=>{}],["android",async()=>{await b()}]]);m=c;const u=p.get(c);u&&u()},j=a=>{a||e.logFatal("Missing file");const t=c.resolve(g,...a.split("/"));return n.existsSync(t)||e.logFatal(`Cannot find file: ${a}`),t},w=async a=>{const t=a.unsignedApk;var o=c.resolve(f,"app-release-unsigned.apk");if((i=o&&n.existsSync(o))||(i=(o=c.isAbsolute(t)&&c.resolve(t)||null)&&n.existsSync(o)),!i){o=c.resolve(g,...t.split("/"));var i=n.existsSync(o)}if(!i)try{const e=await s.findPackageApp(m,f,null);i=(o=e&&e.fullPath)&&n.existsSync(o)}finally{}i||e.logFatal("Cannot find app-release-unsigned.apk"),a.unsignedApk=o},F=async()=>{const{config:e,configPathDiretory:n}=await a.parseConfig(g);return g=n,await w(e),e},h=async(n,t)=>{try{return await a.askProjects(n,t)}catch(n){e.logFatal("Please write all `project` field as project name")}},v=async(e,a)=>{const o=a&&a.name,s=c.join(e,"../","signedApks");await n.mkdirAsyncRecursive(s);const i=`${o}-signed-${t.formatDate((new Date).getTime(),"yyyy-MM-dd-[hh-mm-ss]")}.apk`;return c.resolve(s,i)},$=e=>{n.existsSync(e)&&n.unlinkSync(e)},S=(e,n)=>{const a=c.join(e,"../",`${n}-unsigned-temp.apk`);return $(a),a};async function b(){await o.isInstalled("jarsigner")||e.logFatal("Cannot find `jarsigner`"),await o.isInstalled("zipalign")||e.logFatal("Cannot find `zipalign`");const n=await F(),a=n.unsignedApk,t=await h(n,d);e.logFriendly(`Your Project is : ${t.name}`);const s=t.keyStoreFile,i=j(s),r=t.alias||n.defaultAlias;r||e.logFatal("Cannot find alias");const p=t.storepass||t.keypass,u=t.keypass||t.storepass;p&&u||e.logFatal("Cannot find storepass / keypass");const g=await v(i,t),f=S(g,t.name);try{e.blue("................... Zipalign Start ..................."),await l(`zipalign -v -p 4 ${a} ${f}`),e.blue("................... Zipalign End ..................."),e.red("\n...........................................................................................\n"),e.blue("................... Sign Start ..................."),await l(`jarsigner -verbose -keystore ${i} -storepass ${p} -keypass ${u} -signedjar ${g} ${f} ${r}`),$(f),e.blue("................... Sign End ..................."),e.green(`Signed ${t.name}`),await o.openUrl(c.join(g,"../")),C(g,t.appcenter,m,n.defaultAppcenterToken)}catch(n){e.logError(n)}}const C=async(a,t,s=m,i="",r=y)=>{n.existsSync(a)||e.logFatal(`Cannot find your: ${a}`);const l=(t=t||{})[s]||{},c=Object.keys(l);if(0===c.length)return void e.logFriendly("Cannot find your appcenter config at jj.config.json");const g=r&&l[r];var f;if(g){g.userName&&g.appName&&g.group||e.logFatal("Please check your jj.config.json, Cannot find userName/appName/group"),f={...g,token:g.token||l.token||t.token||i||u,appPath:a,platform:s}}else{const n=c.filter((e=>{const n=l[e];return"object"==typeof n&&Object.keys(n).length>0&&n.userName&&n.appName&&n.group}));0===n.length&&e.logFatal("Please check your jj.config.json, Cannot find userName/appName/group"),e.logFriendly("Upload app to appcenter");var d=await o.askSelectList(n,"Group");const r=l[d];r||e.logFatal("Cannot find your Group info"),f={...r,token:r.token||l.token||t.token||i||u,appPath:a,platform:s}}p.uploadWithInfo(f)};module.exports={signPlatform:k,uploadToAppcenter:C};