"use strict";const e=require("../../untils/logs"),a=require("../../untils/common"),{platforms:t}=require("../../constants/platforms"),r=require("../../untils/parse-config"),o=async(o,n)=>{const s=o&&o.toLowerCase().trim();var l=t[s];if(!l){let r=await a.askPlatform();if(!(l=t[r]))return void e.logFatal(`Only support ${t} now.`)}const{config:i,configPathDiretory:p}=await r.parseConfigPromise(n);try{var c=await r.askProjects(i,null)}catch(a){e.logFatal("Please write all `project` field as project name")}if(!c)return void e.logFatal("Please write all `project` field as project name");const u=(null==c?void 0:c.pgyer)||(null==c?void 0:c.appcenter),g=!(null==c||!c.pgyer);if(!u)return void e.logFatal("missing appcenter or pgyer");const m=u[l];if(!m)return void e.logFatal("missing appInfo");const f=Object.keys(m).filter((e=>{const a=m[e],t="object"==typeof a&&Object.keys(a).length>0;return g?t:t&&a.userName&&a.appName&&a.group}));0===f.length&&e.logFatal("Please check your jj.config.json, Cannot find userName/appName/group");var d=await a.askSelectList(f,"Group");const j=m[d],y=null==j?void 0:j.channel;if(g&&y){var v=`https://www.pgyer.com/${y}`;if(!y)return void e.logFatal("missing channel")}else{j.userName&&j.appName&&j.group||e.logFatal("Please check your jj.config.json, Cannot find userName/appName/group"),v=`https://install.appcenter.ms/users/${j.userName}/apps/${j.appName}/distribution_groups/${j.group}`}e.logFriendly("Your app link: "+v),await a.openUrl(v)};module.exports={applink:o};