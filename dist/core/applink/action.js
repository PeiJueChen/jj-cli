"use strict";const e=require("../../untils/logs"),a=require("../../untils/common"),{platforms:t}=require("../../constants/platforms"),o=require("../../untils/parse-config"),r=async(r,s)=>{const n=r&&r.toLowerCase().trim();var i=t[n];if(!i){let o=await a.askPlatform();if(!(i=t[o]))return void e.logFatal(`Only support ${t} now.`)}const{config:l,configPathDiretory:p}=await o.parseConfigPromise(s);try{var c=await o.askProjects(l,null)}catch(a){e.logFatal("Please write all `project` field as project name")}if(!c)return void e.logFatal("Please write all `project` field as project name");const u=c.appcenter;if(!u)return void e.logFatal("missing appcenter");const g=u[i];if(!g)return void e.logFatal("missing appInfo");const m=Object.keys(g).filter((e=>{const a=g[e];return"object"==typeof a&&Object.keys(a).length>0&&a.userName&&a.appName&&a.group}));0===m.length&&e.logFatal("Please check your jj.config.json, Cannot find userName/appName/group");var f=await a.askSelectList(m,"Group");const j=g[f];j.userName&&j.appName&&j.group||e.logFatal("Please check your jj.config.json, Cannot find userName/appName/group");const d=`https://install.appcenter.ms/users/${j.userName}/apps/${j.appName}/distribution_groups/${j.group}`;e.logFriendly("Your app link: "+d),await a.openUrl(d)};module.exports={applink:r};