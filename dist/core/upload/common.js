"use strict";const e=require("../../untils/common"),{runSpawnCommand:t,runCommand:r,commandExec:n}=require("../../untils/terminal"),a=/\u001b\[((?:\d*;){0,5}\d*)m/g,o=require("../../untils/logs"),i=require("../../untils/fs"),p=require("../open/common");function s(e){if(!e||"string"!=typeof e)return null;let t=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/\r\n/g,"")).replace(/\n/g,"")).replace(/\s+/g,"")).replace(/\─/g,"")).replace(/\┌/g,"")).replace(/\┬/g,"")).replace(/\┐/g,"")).replace(/\└/g,"")).replace(/\┴/g,"")).replace(/\┘/g,"")).replace(/\├/g,"")).replace(/\┼/g,"")).replace(/\┤/g,"")).replace(/\│/g,"--")).split("--")||[];return t=t.map((e=>e=e.replace(a,""))),t=t.filter((e=>!!e)),t&&t.length<=2||t.length%2!=0?null:(t.splice(0,2),t.reduce(((e,t,r,n)=>(r%2==0&&e.push(t),e)),[])||null)}async function l(){let e;try{o.logInfo("Get Apps List..."),e=await r("appcenter apps list")}catch(n){if("string"!=typeof n||!~n.indexOf("appcenter login"))throw n;try{o.logInfo("Please Login First"),await t("appcenter login")}catch(e){throw e}o.logInfo("Get Apps List Again..."),e=await r("appcenter apps list")}return e}async function c(e){let t;try{t=await r(`appcenter distribute groups list --app "${e}"`)}catch(e){throw e}return s(t)}async function u(t,r,n){let a=n;a||(a=r);let p=await i.findFiles(a,"android"===t?".apk":".ipa",!0),s="ios"===t?"IPA":"APK";if(!p||0===p.length)throw new Error(`Cann't Find Any ${s} file`);const l=p.map((e=>e.shortPath+` [${e.size}]-(${e.time})`)),c=await e.askSelectList(l,"File");if(!c)throw new Error("Your Choose Wrong!");const u=p.find((e=>c.startsWith(e.shortPath)));return o.logFriendly(`Your Choose: ${c}`),u}async function g(r,n,a,i){const p=await u(r,n,i);if(!p)throw new Error("packageApp Wrong!");let s=await l();if("string"!=typeof s||!~s.indexOf("\n"))throw new Error("Not found your app list");s=s.split("\n").map((e=>e.trim()));let g=await e.askSelectList(s,"App");if(!g)throw new Error("App Choose Wrong");if(o.logFriendly(`Your App: ${g}`),!~g.indexOf("/"))throw new Error("App Wrong");const w=g.split("/"),h=w[0],f=w[1];let d;try{d=await e.runTask("Get Groups...",(async()=>await c(g)))}catch(e){throw e}if(!d)throw new Error("Groups Not Found, Please make sure you have set Groups in your appcenter project ");let y=await e.askSelectList(d,"Groups");o.logFriendly(`Your Group: ${y}`);let m=`appcenter distribute groups publish --group "${y}" --file "${p.fullPath}" --app "${g}"`;a&&(o.logFriendly(`Your Notes: ${a}`),m=`${m} -r "${a}"`);try{await e.runTask(`${r} uploading...`,(async()=>{await t(m),o.logInfo("~End~")}))}catch(e){throw e}const $=`https://install.appcenter.ms/users/${h}/apps/${f}/distribution_groups/${y}`,A=await Promise.resolve().then((()=>require("open")));await A($,{wait:!1})}exports.uploadPlatform=g;