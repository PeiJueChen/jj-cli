"use strict";const t=require("../../untils/common"),{runSpawnCommand:e,runCommand:r,commandExec:a}=require("../../untils/terminal"),n=/\u001b\[((?:\d*;){0,5}\d*)m/g,p=require("../../untils/logs"),o=require("../../untils/fs"),i=require("../../untils/parse-config");function s(t){if(!t||"string"!=typeof t)return null;let e=(t=(t=(t=(t=(t=(t=(t=(t=(t=(t=(t=(t=(t=(t=t.replace(/\r\n/g,"")).replace(/\n/g,"")).replace(/\s+/g,"")).replace(/\─/g,"")).replace(/\┌/g,"")).replace(/\┬/g,"")).replace(/\┐/g,"")).replace(/\└/g,"")).replace(/\┴/g,"")).replace(/\┘/g,"")).replace(/\├/g,"")).replace(/\┼/g,"")).replace(/\┤/g,"")).replace(/\│/g,"--")).split("--")||[];return e=e.map((t=>t=t.replace(n,""))).filter((t=>!!t)),e&&e.length<=2||e.length%2!=0?null:(e.splice(0,2),e.reduce(((t,e,r,a)=>(r%2==0&&t.push(e),t)),[])||null)}async function l(){let t;try{p.logInfo("Get Apps List..."),t=await r("appcenter apps list")}catch(a){if("string"!=typeof a||!~a.indexOf("appcenter login"))throw a;try{p.logInfo("Please Login First"),await e("appcenter login")}catch(t){throw t}p.logInfo("Get Apps List Again..."),t=await r("appcenter apps list")}return t}async function u(t){let e;try{e=await r(`appcenter distribute groups list --app "${t}"`)}catch(t){throw t}return s(e)}async function c(e,r,a){let n=a;n||(n=r);let i=await o.findFiles(n,"android"===e?[".apk",".aab"]:".ipa",!0),s="ios"===e?"IPA,AAB":"APK";if(!i||0===i.length)throw new Error(`Cann't Find Any ${s} file`);const l=i.map((t=>t.shortPath+` [${t.size}]-(${t.time})`));var u;if(1===l.length)u=i[0],p.logFriendly(`Your App: ${u.fullPath}`);else{const e=await t.askSelectList(l,"File");if(!e)throw new Error("Your Choose Wrong!");u=i.find((t=>e.startsWith(t.shortPath))),p.logFriendly(`Your Choose: ${e}`)}return u}async function g(r,a,n,o){const i=await c(r,a,o);if(!i)throw new Error("packageApp Wrong!");let s=await l();if("string"!=typeof s||!~s.indexOf("\n"))throw new Error("Not found your app list");s=s.split("\n").map((t=>t.trim()));let g=await t.askSelectList(s,"App");if(!g)throw new Error("App Choose Wrong");if(p.logFriendly(`Your App: ${g}`),!~g.indexOf("/"))throw new Error("App Wrong");const f=g.split("/"),h=f[0],w=f[1];let $;try{$=await t.runTask("Get Groups...",(async()=>await u(g)))}catch(t){throw t}if(!$)throw new Error("Groups Not Found, Please make sure you have set Groups in your appcenter project ");let y=await t.askSelectList($,"Groups");p.logFriendly(`Your Group: ${y}`);let d=`appcenter distribute groups publish --group "${y}" --file "${i.fullPath}" --app "${g}"`,m=`\n    your user name: ${h}\n\n    your app name: ${w}\n\n    your group: ${y}\n\n    your app path: ${i.fullPath}\n\n    `;n&&(m+=`your notes: ${n}\n`,d=`${d} -r "${n}"`),p.blue(m);try{await t.runTask(`${r} uploading...`,(async()=>{await e(d),p.logInfo("~End~")}))}catch(t){throw t}const A=`https://install.appcenter.ms/users/${h}/apps/${w}/distribution_groups/${y}`;await t.openUrl(A)}exports.getApps=l,exports.findPackageApp=c;const f=async({platform:r,token:a,userName:n,appName:i,group:s,appPath:l,notes:u=""})=>{await t.isInstalled("appcenter")||p.logFatal("Not found \"appcenter\", Please install first: 'npm install -g appcenter-cli'. ref: https://www.npmjs.com/package/appcenter-cli"),a&&n&&i&&s&&l||p.logFatal("Missing token/userName/appName/group/appPath"),o.existsSync(l)||p.logFatal(`Cannot find your: ${l}`);let c=`\n    your user name: ${n}\n\n    your app name: ${i}\n\n    your group: ${s}\n\n    your app path: ${l}\n\n    `;let g=`appcenter distribute groups publish --group "${s}" --file "${l}" --app "${`${n}/${i}`}" --token ${a}`;u&&(c+=`your notes: ${u}\n`,g=`${g} -r "${u}"`),p.blue(c);try{p.logFriendly("Begin upload app to appCenter"),await t.runTask(`${r} uploading...`,(async()=>{await e(g),p.logInfo("~End~")}))}catch(t){throw t}const f=`https://install.appcenter.ms/users/${n}/apps/${i}/distribution_groups/${s}`;await t.openUrl(f)};exports.uploadWithInfo=f,exports.uploadPlatform=g;