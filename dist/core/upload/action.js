"use strict";const a=require("../../untils/logs"),t=require("../../untils/common"),e=require("./common"),{runSpawnCommand:n}=require("../../untils/terminal"),r=require("../../untils/parse-config"),o=require("./../sign/action"),i={ios:"ios",android:"android"};var l,p;const c=async(n,c,s,u,w,g,d,f)=>{l=g,p=d||c,await t.isInstalled("appcenter")||a.logFatal("Not found \"appcenter\", Please install first: 'npm install -g appcenter-cli'. ref: https://www.npmjs.com/package/appcenter-cli");const m=n&&n.toLowerCase().trim();var h=i[m];if(!h){let e=await t.askPlatform();if(!(h=i[e]))return void a.logFatal("Only support ios/android now.")}try{const{config:t,configPathDiretory:i}=await r.parseConfigPromise(p),s=await e.findPackageApp(h,c,w),u=s&&s.fullPath;try{var y=await r.askProjects(t,l)}catch(t){a.logFatal("Please write all `project` field as project name")}await o.uploadToAppcenter(u,y.appcenter,n,t.defaultAppcenterToken,f)}catch(a){e.uploadPlatform(h,c,u,w)}},s=async()=>{await t.isInstalled("appcenter")||a.logFatal("Not found \"appcenter\", Please install first: 'npm install -g appcenter-cli'. ref: https://www.npmjs.com/package/appcenter-cli");try{await t.runTask("logout...",(async()=>{await n("appcenter logout"),a.logInfo("~End~")}))}catch(a){throw a}},u=async()=>{await t.isInstalled("appcenter")||a.logFatal("Not found \"appcenter\", Please install first: 'npm install -g appcenter-cli'. ref: https://www.npmjs.com/package/appcenter-cli");try{await t.runTask("login...",(async()=>{await n("appcenter login"),a.logInfo("~End~")}))}catch(a){throw a}};module.exports={uploadApp:c,logoutAppcenter:s,loginAppcenter:u};